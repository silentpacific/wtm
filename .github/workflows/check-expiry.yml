# .github/workflows/check-expiry.yml
name: Check Expiring Subscriptions

on:
  schedule:
    # Run every hour at minute 0 (e.g., 1:00, 2:00, 3:00, etc.)
    # This ensures we catch users 1 hour before expiry
    - cron: '0 * * * *'
  
  # Allow manual triggering for testing
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Run in test mode'
        required: false
        default: 'false'
        type: boolean

jobs:
  check-expiring-subscriptions:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check Expiring Subscriptions
        run: |
          echo "🔍 Checking for expiring subscriptions..."
          echo "⏰ Current time: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
          
          # Call your Netlify function
          response=$(curl -s -w "%{http_code}" -X POST \
            -H "Content-Type: application/json" \
            -H "User-Agent: GitHub-Actions-Cron/1.0" \
            -d '{
              "source": "github-actions",
              "timestamp": "'$(date -u +"%Y-%m-%dT%H:%M:%S.%3NZ")'",
              "test_mode": "${{ github.event.inputs.test_mode || 'false' }}"
            }' \
            https://whatthemenu.com/.netlify/functions/check-expiring-subscriptions)
          
          # Extract HTTP status code (last 3 characters)
          http_code="${response: -3}"
          
          # Extract response body (everything except last 3 characters)
          response_body="${response%???}"
          
          echo "📊 HTTP Status: $http_code"
          echo "📄 Response: $response_body"
          
          # Parse the response if it's JSON
          if [[ $http_code -ge 200 && $http_code -lt 300 ]]; then
            echo "✅ Expiry check completed successfully"
            
            # Try to extract useful info from response
            if command -v jq &> /dev/null && echo "$response_body" | jq empty 2>/dev/null; then
              total_found=$(echo "$response_body" | jq -r '.totalFound // 0')
              emails_sent=$(echo "$response_body" | jq -r '.emailsSent // 0')
              emails_failed=$(echo "$response_body" | jq -r '.emailsFailed // 0')
              
              echo "📈 Summary:"
              echo "   • Users found expiring: $total_found"
              echo "   • Reminder emails sent: $emails_sent"
              echo "   • Email failures: $emails_failed"
              
              if [[ $emails_failed -gt 0 ]]; then
                echo "⚠️  Some emails failed to send - check Netlify function logs"
              fi
            fi
          else
            echo "❌ Expiry check failed with status $http_code"
            echo "💬 Response: $response_body"
            
            # Don't fail the job for 404 or 500 errors - just log them
            if [[ $http_code -eq 404 ]]; then
              echo "🔧 Function not found - check if check-expiring-subscriptions function is deployed"
            elif [[ $http_code -eq 500 ]]; then
              echo "🔧 Internal server error - check function logs in Netlify dashboard"
            fi
            
            # Only fail for client errors that indicate misconfiguration
            if [[ $http_code -ge 400 && $http_code -lt 500 && $http_code -ne 404 ]]; then
              exit 1
            fi
          fi

      - name: Log Completion
        if: always()
        run: |
          echo "🏁 Expiry check workflow completed at $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
          echo "📋 Next scheduled run: $(date -u -d '+1 hour' +"%Y-%m-%d %H:%M:%S UTC")"

      - name: Notify on Failure (Optional)
        if: failure()
        run: |
          echo "🚨 ALERT: Expiry check workflow failed!"
          echo "🔍 Check the logs above for details"
          echo "🛠️  Possible issues:"
          echo "   • Netlify function not deployed"
          echo "   • Environment variables missing"
          echo "   • Database connection issues"
          echo "   • Network connectivity problems"
          
          # You could add Slack/Discord notifications here if needed
          # Example: curl webhook to send alert to your phone/slack